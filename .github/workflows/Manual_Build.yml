name: Manual build

on:
  workflow_dispatch:
    inputs:
      version:
        description: '自定义版本：若为 commit、tag、version 则自动获取'
        default: 'commit'
        required: true
        type: string
      postgresql_version:
        description: 'PostgreSQL 版本'
        default: '17.4'
        required: true
        type: string
      configure_flags:
        description: 'Configure 参数'
        default: ''
        required: false
        type: string
      os_label:
        description: '运行环境 (ubuntu-24.04, ubuntu-22.04, ubuntu-24.04-arm, ubuntu-22.04-arm)'
        default: 'ubuntu-24.04-arm'
        required: true
        type: string
      release:
        description: '是否创建 release (0/1)'
        default: '0'
        required: true
        type: string
      upload_artifact:
        description: '是否上传 Artifact (0/1)'
        default: '0'
        required: true
        type: string
      addl_info:
        description: '附加信息'
        default: ''
        required: false

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ inputs.os_label }}
    runs-on: ${{ inputs.os_label }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine version
        id: determine_version
        run: |
          case "${{ inputs.version }}" in
            commit)
              version="$(git rev-parse --short HEAD)-${{ inputs.postgresql_version }}"
              ;;
            tag)
              version="git-$(git describe --tags --abbrev=0)-${{ inputs.postgresql_version }}"
              ;;
            version)
              if [ -f VERSION ]; then
                version=$(cat VERSION)-${{ inputs.postgresql_version }}
              else
                version="${{ inputs.version }}"
              fi
              ;;
            *)
              version="${{ inputs.version }}"
              ;;
          esac
          echo "determined_version=$version" >> $GITHUB_OUTPUT

      - name: Print release tag
        run: |
          echo "${{ inputs.addl_info }}postgresql-${{ steps.determine_version.outputs.determined_version }}-${{ inputs.os_label }}"
        shell: bash

      - name: Free up disk space
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL

      - name: Set up swap space
        if: ${{ runner.os == 'Linux' }}
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            wget curl gcc g++ make libicu-dev bison flex \
            liblz4-dev pkg-config libreadline-dev zlib1g-dev \
            libxml2-dev libssh-dev uuid-dev llvm \
            build-essential libreadline-dev zlib1g-dev
          gcc --version

      - name: Build PostgreSQL ${{ inputs.postgresql_version }}
        env:
          PSQL_VER: ${{ inputs.postgresql_version }}
          OUTPUT: ${{ github.workspace }}/psql
        run: |
          mkdir -p "$OUTPUT"
          wget -q https://ftp.postgresql.org/pub/source/v$PSQL_VER/postgresql-$PSQL_VER.tar.gz
          tar -zxf postgresql-$PSQL_VER.tar.gz
          cd postgresql-$PSQL_VER
          ./configure --prefix="$OUTPUT" --enable-static \${{ inputs.configure_flags }}
          make -j$(nproc)
          make install

      - name: Package into tar.gz
        id: package
        env:
          OUTPUT: ${{ github.workspace }}/psql
        run: |
          TAR=psql-${{ steps.determine_version.outputs.determined_version }}-${{ inputs.os_label }}.tar.gz
          $OUTPUT/bin/psql -V
          echo ${{ github.workspace }} && ls -lh "$OUTPUT"
          tar -czf "$TAR" "$OUTPUT" 
          echo "result_path=${{ github.workspace }}/$TAR" >> $GITHUB_OUTPUT
          echo "result path: $TAR" && ls -lh

      - name: Upload artifact
        if: ${{ inputs.upload_artifact == '1' }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 14
          name: ${{ inputs.addl_info }}postgresql-${{ steps.determine_version.outputs.determined_version }}-${{ inputs.os_label }}-${{ github.run_id }}
          path: ${{ steps.package.outputs.result_path }}

      - name: Create GitHub Release
        if: ${{ inputs.release == '1' }}
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: ${{ inputs.addl_info }}postgresql-${{ steps.determine_version.outputs.determined_version }}-${{ inputs.os_label }}
          files: ${{ steps.package.outputs.result_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
